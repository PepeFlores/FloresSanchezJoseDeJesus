// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;
using Foundation;
using UIKit;

namespace PullToRefresh
{

    public partial class CitiesTableViewController : UITableViewController
    {
        #region Class Variables
        UIRefreshControl refreshControl;
        Dictionary<string, List<string>> cities;
        string Identifier = "BasicTableViewCell";
        #endregion

        #region Constructors
        public CitiesTableViewController(IntPtr handle) : base(handle)
        {
        }
        #endregion

        #region Life Cycle
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            //Mostrar las ciudades que tiene por default la aplicaciÃ³n
            InitializeComponents();
        }
        #endregion

        #region User Interactions
        void RefreshControl_ValueChanged(object sender, EventArgs e)
        {
            //TO-DO: descargar datos de internet
            CitiesManager.SharedInstance.FetchCities();
            //refreshControl.EndRefreshing();
        }
        #endregion

        #region Internal Functionality
        private void InitializeComponents()
        {
            CitiesManager.SharedInstance.CitiesFetched += CitiesManager_CitiesFetched;
            CitiesManager.SharedInstance.FetchCitiesFailed += CitiesManager_FetchCitiesFailed;
            cities = CitiesManager.SharedInstance.GetDefaultCities();

            refreshControl = new UIRefreshControl();
            refreshControl.ValueChanged += RefreshControl_ValueChanged;
            TableView.RefreshControl = refreshControl;
        }
        #endregion


        #region Table View
        public override string TitleForHeader(UITableView tableView, nint section)
        {
            return cities.Keys.ElementAt((int)section);
        }

        public override nint RowsInSection(UITableView tableView, nint section)
        {
            string llave = cities.Keys.ElementAt((int)section);
            return cities[llave].Count;
        }

        [Export("numberOfSectionsInTableView:")]
        public nint NumberOfSections(UITableView tableView)
        {
            return cities.Keys.Count;
        }

        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            UITableViewCell cell = tableView.DequeueReusableCell(Identifier);
            if (cell == null)
                cell = new UITableViewCell(UITableViewCellStyle.Subtitle, Identifier);

            cell.TextLabel.Text = cities[cities.Keys.ElementAt(indexPath.Section)].ElementAt(indexPath.Row);

            return cell;
        }
        #endregion

        #region Cities Manager Events
        void CitiesManager_CitiesFetched(object sender, CitiesEventArgs e)
        {
            cities = e.Cities;
            InvokeOnMainThread(() => refreshControl.EndRefreshing());
        }

        void CitiesManager_FetchCitiesFailed(object sender, EventArgs e)
        {
            Console.WriteLine("Algo fallo");
            InvokeOnMainThread(() => refreshControl.EndRefreshing());
        }
        #endregion
    }
}
